一个程序可能需要在退出前执行一些指令。
程序可能由于下列原因而退出：
    1. 所有的线程已经执行完毕
    2. 调用System.exit()
    3. 用户输入Ctrl+C
    4. 系统级关闭或用户注销

适用场景：
    1. 保存应用状态，例如，当多数IDE退出时，它们将记忆最后的视图有哪些。
    2. 关闭某些数据库连接。
    3. 将应用关闭的消息发送给系统管理员。

解决方案：
    关闭钩子支持所有这些场景。应用可以增加一个关闭钩子，JVM将在应用退出时调用它。

抽象层次的概念：
    将所有的指令（Java代码）写入一个线程的run()内，并且调用java.lang.Runtime.addShutdownHook(Thread t)。
    该方法将这个线程注册为JVM的关闭钩子。在关闭JVM的时候，JVM将并行地运行这些钩子（线程将在JVM关闭的时候启动）。